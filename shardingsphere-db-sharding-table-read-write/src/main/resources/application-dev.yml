server:
  port: 8080
spring:
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: master0,slave0,master1,slave1
      master0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://rm-bp13r897ekwltcf14.mysql.rds.aliyuncs.com:3306/demo0?Unicode=true&characterEncoding=UTF-8
        username: root

      slave0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://rr-bp1894y5a02ayi7mo.mysql.rds.aliyuncs.com:3306/demo0?Unicode=true&characterEncoding=UTF-8
        username: root

      master1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://rm-bp13r897ekwltcf14.mysql.rds.aliyuncs.com:3306/demo1?Unicode=true&characterEncoding=UTF-8
        username: root

      slave1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://rr-bp1894y5a02ayi7mo.mysql.rds.aliyuncs.com:3306/demo1?Unicode=true&characterEncoding=UTF-8
        username: root

    sharding:
      default-database-strategy:
        inline:
          sharding-column: id
          algorithm-expression: ds$->{id % 2}
      master-slave-rules:
        ds0:
          master-data-source-name: master0
          slave-data-source-names: slave0
        ds1:
          master-data-source-name: master1
          slave-data-source-names: slave1
      tables:
        user:
          actual-data-nodes: ds$->{0..1}.user_${0..3}
          database-strategy:
            inline:
              sharding-column: data_source
              algorithm-expression: ds$->{data_source % 2}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: user_${id.longValue() % 4}
          key-generator:
            column: id
            type: SNOWFLAKE
